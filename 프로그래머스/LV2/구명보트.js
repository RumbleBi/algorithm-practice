/*
https://school.programmers.co.kr/learn/courses/30/lessons/42885


문제 설명

무인도에 갇힌 사람들을 구명보트를 이용하여 구출하려고 합니다. 구명보트는 작아서 한 번에 최대 2명씩 밖에 탈 수 없고, 무게 제한도 있습니다.

예를 들어, 사람들의 몸무게가 [70kg, 50kg, 80kg, 50kg]이고 구명보트의 무게 제한이 100kg이라면 2번째 사람과 4번째 사람은 같이 탈 수 있지만 1번째 사람과 3번째 사람의 무게의 합은 150kg이므로 구명보트의 무게 제한을 초과하여 같이 탈 수 없습니다.

구명보트를 최대한 적게 사용하여 모든 사람을 구출하려고 합니다.

사람들의 몸무게를 담은 배열 people과 구명보트의 무게 제한 limit가 매개변수로 주어질 때, 모든 사람을 구출하기 위해 필요한 구명보트 개수의 최솟값을 return 하도록 solution 함수를 작성해주세요.


제한사항

무인도에 갇힌 사람은 1명 이상 50,000명 이하입니다.
각 사람의 몸무게는 40kg 이상 240kg 이하입니다.
구명보트의 무게 제한은 40kg 이상 240kg 이하입니다.
구명보트의 무게 제한은 항상 사람들의 몸무게 중 최댓값보다 크게 주어지므로 사람들을 구출할 수 없는 경우는 없습니다.


입출력 예

people	            limit	        return
[70, 50, 80, 50]	100	            3
[70, 80, 50]	    100	            3
*/

// 해결방법

function solution(people, limit) {
  let answer = 0;
  // 오름차순으로 몸무게를 정렬
  people.sort((a, b) => a - b);

  // 첫번째 배열요소, 마지막 배열 요소 변수 선언
  let start = 0;
  let end = people.length - 1;

  while (start < end) {
    // 최솟값과 최댓값을 비교하여 같은 숫자가 된다면 벗어나게됨
    let sum = people[end] + people[start];
    // 각 요소의 합이 보트의 제한보다 크다면 그 마지막 요소는 혼자 탈 수 밖에 없으므로
    // end-- 를하고 answer++ 로 보트의 개수를 늘리고,
    // 물론 limit에 미치지 못한다면 answer++ 를 하고 다음 요소 값들을 더해 비교한다.
    if (sum > limit) {
      end--;
    } else {
      start++;
      end--;
    }
    answer++;
  }
  // 만약 마지막 값이 하나 남게 되어있다면 혼자 보트를 타게 되므로 answer++ 를 해준다.
  if (start == end) answer++;
  return answer;
}
// 무조건 최대의 효율(보트에 탄 사람들의 몸무게의 합을 limit의 숫자에 맞출 필요는 없다. 그렇게 하지 않아도 최적의 해를 찾을 수 있기 때문이다.)
